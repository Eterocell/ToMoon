on:
  - push
  - pull_request

name: ToMoon Auto Build

jobs:
  linux_amd64:
    name: Linux AMD64
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      #build tomoon start
      - uses: actions/checkout@v4
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Download Clash and Yacd
        run: |
          mkdir tmp && cd tmp
          mkdir core && cd core
          # Mihomo (Clash Meta)
          wget -O clash.gz https://github.com/MetaCubeX/mihomo/releases/download/v1.18.3/mihomo-linux-amd64-v1.18.3.gz
          gzip -d clash.gz
          # country.mmdb & geosite.dat
          wget https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country.mmdb
          wget https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat
          wget -O asn.mmdb https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-ASN.mmdb
          # yacd
          wget -O yacd.zip https://github.com/MetaCubeX/yacd/archive/gh-pages.zip
          unzip yacd.zip
          mv Yacd-meta-gh-pages web

      # build front-end start
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Requestment
        run: |
          cp -r usdpl src/
          npm i
      - name: build front end
        run: npm run build
        working-directory: .
      - name: build external web page
        run: |
          npm i
          npm run build
        working-directory: tomoon-web
      # build front-end end
      # build backend start
      - uses: dtolnay/rust-toolchain@stable
      - uses: ClementTsang/cargo-action@v0.0.6
        with:
          command: build
          directory: ./backend
          args: --target x86_64-unknown-linux-gnu --release
          use-cross: false
      # build backend end
      #build tomoon stop
      #output: # ToMoon/backend/target/x86_64-unknown-linux-gnu/release/tomoon

      # - uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable
      #     target: x86_64-unknown-linux-gnu
      #     override: true
      # - uses: actions-rs/cargo@v1
      #   with:
      #     use-cross: true
      #     command: build
      #     args: --target x86_64-unknown-linux-gnu --release # ToMoon/backend/target/x86_64-unknown-linux-gnu/release/tomoon
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: 16
      # - run: pnpm run build
      - name: Collect Files
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        run: |
          mkdir -p ./release/tomoon/bin/core/web
          mkdir -p ./release/tomoon/dist
          cp backend/target/x86_64-unknown-linux-gnu/release/tomoon ./release/tomoon/bin/tomoon
          cp ./dist/index.js ./release/tomoon/dist/index.js
          cp main.py ./release/tomoon/main.py
          cp plugin.json ./release/tomoon/plugin.json
          cp package.json ./release/tomoon/package.json
          cp -r ./tmp/core ./release/tomoon/bin/
          cp -r ./tomoon-web/dist ./release/tomoon/web
          cp -r ./py_modules ./release/tomoon/py_modules
          cd ./release 
          zip -r tomoon-${{ env.RELEASE_VERSION }}.zip tomoon
          cd ..

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          #body_path: Changelog/${{ env.RELEASE_VERSION }}-changelog.md
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./release/tomoon-${{ env.RELEASE_VERSION }}.zip
          asset_name: tomoon-${{ env.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
